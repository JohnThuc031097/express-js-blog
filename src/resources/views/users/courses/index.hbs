<div class="col xl-max md-max container__courses-user">
    <div class="row container__courses-user-caption">Courses of me</div>
    <div class="row xl-o-space-between md-o-space-between container__courses-user-controls">
        <div class="col xl-0_5 md-0_5"></div>
        <button button-id="create" class="col xl md-1_5 btn text-link container__courses-user-controls-item">Create
            New</button>
        <button button-id="view-removed" class="col xl md-1_5 btn text-link container__courses-user-controls-item">
            View Trash ({{coursesDeletedCount}})
        </button>
        <div class="col xl-8 md-2"></div>
        <button button-id="remove-all" class="col xl md-1_5 btn text-link container__courses-user-controls-item">Remove
            All
            (0)
        </button>
        <div class="col xl-0_5 md-0_5"></div>
    </div>
    <div class="row container__courses-user-heading">
        <span class="col xl-0_5 md-0_5 text-center container__courses-user-heading-item" id="ckbAllCount">(0)</span>
        <span class="col xl-0_5 md-0_5 text-center container__courses-user-heading-item">
            <input type="checkbox" id="ckbAll">
        </span>
        <span class="col xl-0_5 md-0_5 text-center container__courses-user-heading-item">#</span>
        <span class="col xl-3 md-1_5 container__courses-user-heading-item">Name</span>
        <span class="col xl-4 md-1_5 container__courses-user-heading-item">Description</span>
        <span class="col xl md text-center container__courses-user-heading-item">Level</span>
        <span class="col xl md text-center container__courses-user-heading-item">Created At</span>
        <span class="col xl md text-center container__courses-user-heading-item">Controls</span>
    </div>
    {{#each courses}}
    <div class="row text-link container__courses-user-table{{#if (isEven @index)}}-light{{/if}}">
        <span class="col xl-0_5 md-0_5 text-center container__courses-user-table-item"></span>
        <span class="col xl-0_5 md-0_5 text-center container__courses-user-table-item">
            <input input-data="{{this._id}}" type="checkbox" name="ckbItem">
        </span>
        <div class="col xl-0_5 md-0_5 text-center container__courses-user-table-item">{{sum @index 1}}</div>
        <div div-data="{{this._id}}" div-id="view-detail"
            class="col xl-3 md-1_5 text-link container__courses-user-table-item text-short">{{this.name}}</div>
        <div class="col xl-4 md-1_5 container__courses-user-table-item text-short">{{this.description}}</div>
        <div class="col xl md text-center container__courses-user-table-item">{{this.level.name}}</div>
        <div class="col xl md text-center container__courses-user-table-item">{{formatDate this.createdAt}}</div>
        <div class="col xl md text-center container__courses-user-table-item--controls">
            <button button-data="{{this._id}}" button-id="edit"
                class="container__courses-user-table-item-child btn text-link">
                Edit
            </button>
            <button button-data="{{this._id}}" button-id="remove"
                class="container__courses-user-table-item-child btn text-link">
                Remove
            </button>
        </div>
    </div>
    {{else}}
    <div class="row container__courses-user-table-empty">
        <div class="col xl-max md-max container__courses-user-table-empty-show-text">
            Bạn chưa đăng khóa học nào.
            <a class="btn text-link container__courses-user-table-empty-show-link"
                href="/user/{{idUser}}/courses/page/create">
                Create New
            </a>
        </div>
    </div>
    {{/each}}
    <div id="{{optionsDialog.style}}"></div>
    <form id="{{optionsDialog.selector}}" class="row hide" method="POST" action="/">
    </form>
    <script>
        const _$ = document.querySelector.bind(document);
        const _$$ = document.querySelectorAll.bind(document);

        const cssRender = `{{{ cssRender }}}`;
        const optionsDialog = {{{ json optionsDialog }}};

        const frmDialogCourseRemove = FormDialog();
        frmDialogCourseRemove.init(optionsDialog, cssRender);
        frmDialogCourseRemove.createDialog({
            type: 'warn',
            title: 'Loại bỏ khóa học',
            message: 'Bạn thực sự muốn loại bỏ khóa học này?',
        });

        const frmDialogCourseRemoveAll = FormDialog();
        frmDialogCourseRemoveAll.init(optionsDialog, cssRender);
        frmDialogCourseRemoveAll.createDialog({
            type: 'warn',
            title: 'Loại bỏ các khóa học',
            message: 'Bạn thực sự muốn loại bỏ tất các khóa học đã lựa chọn này?',
        });

        const _eBtnRemoves = _$$('button[button-data][button-id="remove"]');
        const _eBtnRemovesAll = _$('button[button-id="remove-all"]');
        const _eBtnEdits = _$$('button[button-data][button-id="edit"]');
        const _eBtnCreates = _$$('button[button-id="create"]');
        const _eBtnViewRemoved = _$$('button[button-id="view-removed"]');
        const _eDivViews = _$$('div[div-data][div-id="view-detail"]');
        const _eDisplayCountChecked = _$('#ckbAllCount');
        const _eChkAll = _$('input[type="checkbox"][id="ckbAll"]');
        const _eChkItems = _$$('input[type="checkbox"][name="ckbItem"]');

        if (_eDivViews) {
            _eDivViews.forEach(e => {
                const idCourse = e.getAttribute('div-data');
                e.addEventListener('click', () => {
                    location.href = `/user/{{idUser}}/courses/page/detail/${idCourse}`;
                })
            })
        }

        if (_eBtnCreates) {
            _eBtnCreates.forEach(e => {
                e.addEventListener('click', () => {
                    location.href = `/user/{{idUser}}/courses/page/create`;
                });
            });
        }

        if (_eBtnViewRemoved) {
            _eBtnViewRemoved.forEach(e => {
                e.addEventListener('click', () => {
                    location.href = `/user/{{idUser}}/courses/page/deleted`;
                });
            });
        }

        if (_eBtnEdits) {
            _eBtnEdits.forEach(e => {
                const idCourse = e.getAttribute('button-data');
                e.addEventListener('click', () => {
                    location.href = `/user/{{idUser}}/courses/page/edit/${idCourse}`;
                });
            });
        }

        if (_eBtnRemoves) {
            _eBtnRemoves.forEach(e => {
                const idCourse = e.getAttribute('button-data');
                e.addEventListener('click', () => {
                    frmDialogCourseRemove.showDialog(
                        {
                            value: `/user/{{idUser}}/courses/api/remove/${idCourse}?_method=PUT`,
                            button: [
                                {
                                    tag: 'input',
                                    attrs: ['type', 'value'],
                                    values: ['submit', 'Có'],
                                },
                                {
                                    tag: 'input',
                                    attrs: ['type', 'value'],
                                    values: ['button', 'Không'],
                                    isExit: true,
                                },
                            ]
                        })
                })
            })
        }

    </script>
    <script>

        if (_eChkAll) {
            _eChkAll.addEventListener('click', () => {
                if (_eChkItems) {
                    _eChkItems.forEach(e => {
                        e.checked = !e.checked;
                        e.addEventListener('click', () => {
                            e.checked = !e.checked;
                            updateCountChecked();
                        })
                    });
                    updateCountChecked();
                }
            });
            if (_eBtnRemovesAll) {
                _eBtnRemovesAll.addEventListener('click', () => {
                    let idCourses = [..._eChkItems].reduce((totalId, element) => {
                        if (element.checked) {
                            totalId = [...totalId, element.getAttribute('input-data')];
                        }
                        return totalId;
                    }, []);
                    frmDialogCourseRemoveAll.showDialog(
                        {
                            value: `/user/{{idUser}}/courses/api/remove/${idCourses}?_method=PUT`,
                            button: [
                                {
                                    tag: 'input',
                                    attrs: ['type', 'value'],
                                    values: ['submit', 'Có'],
                                },
                                {
                                    tag: 'input',
                                    attrs: ['type', 'value'],
                                    values: ['button', 'Không'],
                                    isExit: true,
                                },
                            ]
                        })

                });
            }
        }

        const updateCountChecked = () => {
            const eChkItemsChecked = _$$('input[type="checkbox"][name="ckbItem"]:checked');
            if (eChkItemsChecked) {
                if (_eDisplayCountChecked) {
                    _eDisplayCountChecked.innerHTML = `(${eChkItemsChecked.length})`;
                    _eBtnRemovesAll.innerHTML = `Remove All (${eChkItemsChecked.length})`;
                }
            }
        }

    </script>
</div>