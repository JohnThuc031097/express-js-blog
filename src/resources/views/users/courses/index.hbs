<div class="col xl-max md-max container__courses-user">
    <div class="row container__courses-user-caption">Courses of me</div>
    <div class="row xl-o-space-between md-o-space-between container__courses-user-controls">
        <div class="col xl md-0_5"></div>
        <button button-id="create" class="col xl md-1_5 btn text-link container__courses-user-controls-create">Create
            New</button>
        <button button-id="view-removed"
            class="col xl md-1_5 btn text-link container__courses-user-controls-view-deleted">
            View Trash ({{coursesDeletedCount}})
        </button>
        <div class="col xl-7 md-2"></div>
        <button button-id="remove-all"
            class="col xl md-1_5 btn text-link container__courses-user-controls-remove-all">Remove
            All
            (0)
        </button>
        <div class="col xl md-0_5"></div>
    </div>
    <div class="row container__courses-user-heading">
        <div class="col xl-0_5 md-0_5 text-center container__courses-user-heading-item center">
            <div class="container__courses-user-heading-item-text">
                <input type="checkbox" id="ckbAll">
            </div>
        </div>
        <div class="col xl-0_5 md-0_5 text-center container__courses-user-heading-item">
            <span class="container__courses-user-heading-item-text">ID</span>
            <div class="container__courses-user-heading-item-icon">
                {{{sortable 'index' _sort}}}
            </div>
        </div>
        <div class="col xl-4 md-2_5 container__courses-user-heading-item">
            <span class="text-center container__courses-user-heading-item-text">Name</span>
            <div class="container__courses-user-heading-item-icon">
                {{{sortable 'name' _sort}}}
            </div>
        </div>
        <div class="col xl md text-center container__courses-user-heading-item">
            <span class="text-center container__courses-user-heading-item-text">Level</span>
            <div class="container__courses-user-heading-item-icon">
                {{{sortable 'level' _sort}}}
            </div>
        </div>
        <div class="col xl-2 md-1_5 text-center container__courses-user-heading-item">
            <span class="text-center container__courses-user-heading-item-text">Created At</span>
            <div class="container__courses-user-heading-item-icon">
                {{{sortable 'createdAt' _sort}}}
            </div>
        </div>
        <div class="col xl-2 md text-center container__courses-user-heading-item">
            <span class="text-center container__courses-user-heading-item-text">Controls</span>
        </div>
    </div>
    {{#each courses}}
    <div class="row xl-wrap text-link container__courses-user-table{{#if (isEven @index)}}-light{{/if}}">
        <div class="col xl-0_5 md-0_5 text-center container__courses-user-table-item">
            <input input-data="{{this._id}}" type="checkbox" name="ckbItem">
        </div>
        {{!-- <div class="col xl-0_5 md-0_5 text-center container__courses-user-table-item">{{sum @index 1}}</div> --}}
        <div class="col xl-0_5 md-0_5 text-center container__courses-user-table-item">{{this.index}}</div>
        <div div-data="{{this._id}}" div-id="view-detail"
            class="col xl-4 md-2_5 text-link container__courses-user-table-item text-short">{{this.name}}</div>
        <div class="col xl md container__courses-user-table-item">{{this.level.name}}</div>
        <div class="col xl-2 md-1_5 container__courses-user-table-item">{{formatDate this.createdAt}}</div>
        <div class="col xl-2 md text-center container__courses-user-table-item--controls">
            <div class="row xl-wrap md-wrap">
                <div class="col xl-6 md-max container__courses-user-table-item-child">
                    <button button-data="{{this._id}}" button-id="edit" class="btn">
                        Edit
                    </button>
                </div>
                <div class="col xl-6 md-max container__courses-user-table-item-child">
                    <button button-data="{{this._id}}" button-id="remove" class="btn">
                        Remove
                    </button>

                </div>
            </div>
        </div>
    </div>
    {{else}}
    <div class="row container__courses-user-table-empty">
        <div class="col xl-max md-max container__courses-user-table-empty-show-text">
            Bạn chưa đăng khóa học nào.
            <a class="btn text-link container__courses-user-table-empty-show-link"
                href="/user/{{idUser}}/courses/page/create">
                Create New
            </a>
        </div>
    </div>
    {{/each}}
    <div id="{{optionsDialog.style}}"></div>
    <form id="{{optionsDialog.selector}}" class="row hide" method="POST" action="/">
    </form>
    <script>
        const _$ = document.querySelector.bind(document);
        const _$$ = document.querySelectorAll.bind(document);

        const cssRender = `{{{ cssRender }}}`;
        const optionsDialog = {{{ json optionsDialog }}};

        const frmDialogCourseRemove = FormDialog();
        frmDialogCourseRemove.init(optionsDialog, cssRender);
        frmDialogCourseRemove.createDialog({
            type: 'warn',
            title: 'Loại bỏ khóa học',
            message: 'Bạn thực sự muốn loại bỏ khóa học này?',
        });

        const frmDialogCourseRemoveAll = FormDialog();
        frmDialogCourseRemoveAll.init(optionsDialog, cssRender);
        frmDialogCourseRemoveAll.createDialog({
            type: 'warn',
            title: 'Loại bỏ các khóa học',
            message: 'Bạn thực sự muốn loại bỏ tất các khóa học đã lựa chọn này?',
        });

        const _eBtnRemove = _$$('button[button-data][button-id="remove"]');
        const _eBtnRemoveAll = _$('button[button-id="remove-all"]');
        const _eBtnEdit = _$$('button[button-data][button-id="edit"]');
        const _eBtnCreate = _$$('button[button-id="create"]');
        const _eBtnViewRemoved = _$$('button[button-id="view-removed"]');
        const _eDivView = _$$('div[div-data][div-id="view-detail"]');
        const _eChkAll = _$('input[type="checkbox"][id="ckbAll"]');
        const _eChkItem = _$$('input[type="checkbox"][name="ckbItem"]');
        const _selectorChkItemsChecked = 'input[type="checkbox"][name="ckbItem"]:checked';

        if (_eDivView) {
            _eDivView.forEach(e => {
                const idCourse = e.getAttribute('div-data');
                e.addEventListener('click', () => {
                    location.href = `/user/{{idUser}}/courses/page/detail/${idCourse}`;
                })
            })
        }

        if (_eBtnCreate) {
            _eBtnCreate.forEach(e => {
                e.addEventListener('click', () => {
                    location.href = `/user/{{idUser}}/courses/page/create`;
                });
            });
        }

        if (_eBtnViewRemoved) {
            _eBtnViewRemoved.forEach(e => {
                e.addEventListener('click', () => {
                    location.href = `/user/{{idUser}}/courses/page/deleted`;
                });
            });
        }

        if (_eBtnEdit) {
            _eBtnEdit.forEach(e => {
                const idCourse = e.getAttribute('button-data');
                e.addEventListener('click', () => {
                    location.href = `/user/{{idUser}}/courses/page/edit/${idCourse}`;
                });
            });
        }

        if (_eBtnRemove) {
            _eBtnRemove.forEach(e => {
                const idCourse = e.getAttribute('button-data');
                e.addEventListener('click', () => {
                    frmDialogCourseRemove.showDialog(
                        {
                            value: `/user/{{idUser}}/courses/api/remove/${idCourse}?_method=PUT`,
                            button: [
                                {
                                    tag: 'input',
                                    attrs: ['type', 'value'],
                                    values: ['submit', 'Có'],
                                },
                                {
                                    tag: 'input',
                                    attrs: ['type', 'value'],
                                    values: ['button', 'Không'],
                                    isExit: true,
                                },
                            ]
                        })
                })
            })
        }
        if (_eBtnRemoveAll) {
            _eBtnRemoveAll.addEventListener('click', () => {
                const eChkItemsChecked = _$$(_selectorChkItemsChecked);
                if (eChkItemsChecked.length > 0) {
                    let idCourses = [..._eChkItem].reduce((totalId, element) => {
                        if (element.checked) {
                            totalId = [...totalId, element.getAttribute('input-data')];
                        }
                        return totalId;
                    }, []);
                    frmDialogCourseRemoveAll.showDialog(
                        {
                            value: `/user/{{idUser}}/courses/api/remove/${idCourses}?_method=PUT`,
                            button: [
                                {
                                    tag: 'input',
                                    attrs: ['type', 'value'],
                                    values: ['submit', 'Có'],
                                },
                                {
                                    tag: 'input',
                                    attrs: ['type', 'value'],
                                    values: ['button', 'Không'],
                                    isExit: true,
                                },
                            ]
                        })
                }
            });
        }
    </script>
    <script>

        if (_eChkAll) {
            if (_eChkItem) {
                _eChkItem.forEach(e => {
                    e.addEventListener('click', () => {
                        let isCheck = true;
                        if (!e.checked) isCheck = false;
                        e.checked = isCheck;
                        updateCountChecked();
                    });
                })
            }

            _eChkAll.addEventListener('click', () => {
                let isCheck = true;
                if (!_eChkAll.checked) isCheck = false;
                if (_eChkItem) {
                    _eChkItem.forEach(e => (e.checked = isCheck));
                    updateCountChecked();
                }
            });
        }

        const updateCountChecked = () => {
            const eChkItemsChecked = _$$(_selectorChkItemsChecked);
            if (eChkItemsChecked) {
                _eBtnRemoveAll.innerHTML = `Remove All (${eChkItemsChecked.length})`;
            }
        }

    </script>
</div>